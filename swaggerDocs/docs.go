// Package swaggerDocs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package swaggerDocs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/line/callback": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lineController.CallbackSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lineController.CallbackErrorResponse"
                        }
                    }
                }
            }
        },
        "/line/pushMessages": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "PushMessagesRequired",
                        "name": "PushMessagesBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/lineController.PushMessagesBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lineController.PushMessagesSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lineController.PushMessagesErrorResponse"
                        }
                    }
                }
            }
        },
        "/line/replyMessages": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "ReplyMessagesRequired",
                        "name": "ReplyMessagesBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/lineController.ReplyMessagesBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lineController.ReplyMessagesSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lineController.ReplyMessagesErrorResponse"
                        }
                    }
                }
            }
        },
        "/line/userMessages": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "default": "\"Ubbd98d38fbfc1fe0e7db93a2d8bc9c34\"",
                        "description": "用戶ID",
                        "name": "userID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lineController.GetUserMessagesSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lineController.GetUserMessagesErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "lineController.CallbackErrorResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "Please Provide Line signature"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "lineController.CallbackSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "Line web socket Success"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "lineController.GetUserMessagesErrorResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "Please Provide userID"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "lineController.GetUserMessagesSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/lineController.userMessagesData"
                    }
                },
                "statusCode": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "lineController.PushMessagesBody": {
            "type": "object",
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Hello",
                        " world"
                    ]
                },
                "userID": {
                    "type": "string",
                    "example": "Ubbd98d38fbfc1fe0e7db93a2d8bc9c34"
                }
            }
        },
        "lineController.PushMessagesErrorResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "Wrong userID"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "lineController.PushMessagesSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/lineController.PushMessagesBody"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "lineController.ReplyMessagesBody": {
            "type": "object",
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Hello",
                        " world"
                    ]
                },
                "replyToken": {
                    "type": "string",
                    "example": "bd2b0c9ee9124ef9814913165457afce"
                }
            }
        },
        "lineController.ReplyMessagesErrorResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "Wrong ReplyToken"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "lineController.ReplyMessagesSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/lineController.ReplyMessagesBody"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "lineController.userMessagesData": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "2022-11-26T14:28:58.526+00:00"
                },
                "message": {
                    "type": "string",
                    "example": "Hello World"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "0.0.0.0:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "LineMongo",
	Description:      "LineMongo swagger",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
